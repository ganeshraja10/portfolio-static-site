{"version":3,"sources":["components/social_icons/socialIconItem.jsx","components/social_icons/SocialIconsList.jsx","components/nav_list/NavItem.jsx","components/nav_list/NavItemsList.jsx","components/profile_pic/profilePicItem.jsx","components/sideBar.jsx","components/skills/skillItem.jsx","components/skills/skillItemsList.jsx","components/main_item/Layout.jsx","App.js","serviceWorker.js","index.js"],"names":["socialIconItem","props","href","url","rel","target","aria-label","className","icon","iconType","SOCIAL_ICONS","src","type","faGithub","name","faDev","faTwitter","faLinkedin","SocialIconsList","class","map","element","Component","navItem","key","faAirbnb","NAV_ITEM","NavItemsList","NavItem","profilePicItem","alt","NavigationBar","id","SkillItem","console","log","data","style","color","text","skillItemsList","minHeight","padding","textAlign","marginBottom","FRONT_END_SKILLS","faJs","faHtml5","faCss3","faSass","faReact","faBootstrap","Layout","state","Container","fluid","backgroundColor","fontSize","paddingLeft","Row","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.60a205f5.chunk.js","sourcesContent":["import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nexport default function socialIconItem(props) {\n  return (\n    <a href={props.url} rel='noopener' target='_blank' aria-label='ss'>\n      <FontAwesomeIcon className='social-icon' icon={props.iconType} />\n    </a>\n  );\n}\n","import React, { Component } from \"react\";\nimport SocialIconItem from \"./socialIconItem\";\nimport { faGithub, faDev, faTwitter, faLinkedin } from \"@fortawesome/free-brands-svg-icons\";\n\nconst SOCIAL_ICONS = [\n  {\n    src: \"https://github.com/ganeshraja10\",\n    type: faGithub,\n    name: \"Github\",\n  },\n  {\n    src: \"https://dev.to/ganesh\",\n    type: faDev,\n    name: \"Dev.to\",\n  },\n  {\n    src: \"https://twitter.com/ganesh_107\",\n    type: faTwitter,\n    name: \"Twitter\",\n  },\n  {\n    src: \"https://www.linkedin.com/in/ganesh-raja-b4a155ab/\",\n    type: faLinkedin,\n    name: \"LinkedIn\",\n  },\n];\n\nexport default class SocialIconsList extends Component {\n  render() {\n    return (\n      <div class='social-icons-list'>\n        {SOCIAL_ICONS.map((element) => (\n          <SocialIconItem url={element.src} iconType={element.type} />\n        ))}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAirbnb } from \"@fortawesome/free-brands-svg-icons\";\n\nconst navItem = (props) => {\n  return (\n    <li key={props.name}>\n      <a href={props.href}>\n        <div class='items'>\n          <FontAwesomeIcon icon={faAirbnb} /> {props.name}\n        </div>\n      </a>\n    </li>\n  );\n};\n\nexport default navItem;\n","import React, { Component } from \"react\";\nimport NavItem from \"./NavItem\";\n\nconst NAV_ITEM = [\"About me\", \"Projects\", \"Blogs\"];\n\nexport default class NavItemsList extends Component {\n  render() {\n    return (\n      <ul className='list-unstyled components'>\n        {NAV_ITEM.map((element) => (\n          <NavItem name={element} />\n        ))}\n      </ul>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default function profilePicItem() {\n  return (\n    <img\n      class='profile-pic'\n      src='https://media-exp1.licdn.com/dms/image/C5103AQEijuVyitMGpw/profile-displayphoto-shrink_200_200/0?e=1594252800&v=beta&t=BvaaSf8sbuMQbvFdDXRNT5i-tO6jPfPYlR3CtjFU7qk'\n      alt='Profile Pic'\n    />\n  );\n}\n","import React from \"react\";\n\nimport SocialIconsList from \"./social_icons/SocialIconsList\";\nimport NavItemsList from \"./nav_list/NavItemsList\";\nimport ProfilePicItem from \"./profile_pic/profilePicItem\";\n\nconst NavigationBar = (props) => {\n  return (\n    <nav id='sidebar'>\n      <ProfilePicItem />\n      <SocialIconsList />\n      <NavItemsList />\n    </nav>\n  );\n};\n\nexport default NavigationBar;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nexport default function SkillItem(props) {\n  console.log(props.data);\n  return (\n    <li>\n      <FontAwesomeIcon style={{ color: props.data.color }} icon={props.data.icon} /> {props.data.text}\n    </li>\n  );\n}\n","import React from \"react\";\nimport SkillItem from \"./skillItem\";\n\nexport default function skillItemsList(props) {\n  return (\n    <div className={\"col-md-12 col-xl-2 custom-card skill-list\"} style={{ minHeight: \"300px\", padding: \"10px\" }}>\n      <div style={{ textAlign: \"center\", marginBottom: \"20px\" }}>Front End</div>\n      <div class='skill-line'></div>\n      <ul class='skills'>\n        {props.data.map((element) => (\n          <SkillItem data={element} key={element.name} />\n        ))}\n      </ul>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport { Container, Row } from \"reactstrap\";\nimport { faJs, faHtml5, faCss3, faSass, faReact, faBootstrap } from \"@fortawesome/free-brands-svg-icons\";\n\nimport SkillItemsList from \"../skills/skillItemsList\";\nconst FRONT_END_SKILLS = [\n  { color: \"#f0db4f\", text: \"JavaScript\", icon: faJs },\n  { color: \"#e34f26\", text: \"HTML5\", icon: faHtml5 },\n  { color: \"#e34f26\", text: \"CSS3\", icon: faCss3 },\n  { color: \"#c69\", text: \"SASS\", icon: faSass },\n  { color: \"#61dbfb\", text: \"React\", icon: faReact },\n  { color: \"#563d7c\", text: \"Bootstrap\", icon: faBootstrap },\n];\nclass Layout extends Component {\n  state = {};\n  render() {\n    return (\n      <Container fluid>\n        <div className={\"jumbotron\"} style={{ backgroundColor: \"transparent\", color: \"antiquewhite\" }}>\n          <div id='intro' style={{ minHeight: \"50px\" }}></div>\n          <div id='cursor'></div>\n          <p style={{ fontSize: \"16px\" }}>PageMaker including versions of Lorem Ipsum.</p>\n        </div>\n        <h4 style={{ paddingLeft: \"30px\" }}>Area of Experience</h4>\n        <Row>\n          <SkillItemsList data={FRONT_END_SKILLS} />\n          <SkillItemsList data={FRONT_END_SKILLS} />\n          <SkillItemsList data={FRONT_END_SKILLS} />\n          <SkillItemsList data={FRONT_END_SKILLS} />\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Layout;\n","import React from \"react\";\nimport Navigationbar from \"./components/sideBar\";\nimport Layout from \"./components/main_item/Layout\";\nfunction App() {\n  return (\n    <div class='wrapper' style={{ color: \"white\" }}>\n      <Navigationbar />\n      <Layout />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}